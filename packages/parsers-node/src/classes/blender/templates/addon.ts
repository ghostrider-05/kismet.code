const header = `"""
Script generated by ghostrider-05.
Blender Addon: https://github.com/leeroyjenkins-87/rlmm_blender_toolkit
Created with: https://github.com/ghostrider-05/kismet.ts
"""`

const bl_info = `
bl_info = {
    "name": "Kismet",
    "description": "Run kismet inside of blender",
    "author": "ghostrider-05",
    "version": (0, 1),
    "blender": (2, 80, 0),
    "warning": "Beta",
    "tracker_url": "https://github.com/ghostrider-05/kismet.ts/issues/",
    "support": "TESTING",
    "category": "Map making",
}`

export const baseTemplate = (copy: boolean, info: boolean) => `${header}

import bpy
from bpy.types import NodeTree, Node, NodeSocket
${copy ? 'import paperclip' : ''}
${info ? bl_info : ''}

class KismetNodeTree(NodeTree):
    # Description string
    '''Node editor for kismet sequences in UDK'''

    bl_idname = 'KismetTreeType'
    bl_label = "Kismet Sequence editor"
    bl_icon = 'EVENT_K'
    name = "Kismet Sequence"

class KismetNodeTreeNode:
    @classmethod
    def poll(cls, ntree):
        return ntree.bl_idname == 'KismetTreeType'

class MultiSocketInput(NodeSocket):
    def __init__(self):
        self.link_limit = 0

    def draw (self, context, layout, node, text):
        layout.label(text=self.name)

    def draw_color (self, context, node):
        if self.display_shape == 'SQUARE':
            return [1.0, 0.4, 0.216, 1]
        else:
            return [1,1,1, 0.5]

hide_variable_values = True

class WM_OT_kismet_var_toggle(bpy.types.Operator):
    bl_idname = "udk.kismet_toggle_var_values"
    bl_label = "Show variable values"

    def execute (self, context):
        if hide_variable_values:
            self.bl_label = "Show variable values"
        else:
            self.bl_label = "Hide variable values"

        hide_variable_values = not hide_variable_values
        return {'FINISHED'}

def add_toggle (self, context):
    self.layout.operator("udk.kismet_toggle_var_values")
`
